{"version":3,"sources":["utils/API.js","components/EmployeeTable.js","App.js","index.js"],"names":["axios","get","EmployeeTable","state","data","sortOrder","setSortedField","field","results","sort","compareName","compareLocation","setState","a","b","bandA","name","last","toUpperCase","bandB","comparison","location","API","then","res","catch","err","console","log","colSpan","type","onClick","this","map","employee","key","phone","src","picture","large","className","alt","first","city","email","Component","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2SAIe,EACH,WACV,OAAOA,IAAMC,IAJC,mDC0FDC,E,4MAvFdC,MAAQ,CACPC,KAAM,GACNC,UAAW,c,EAUZC,eAAiB,SAACC,GACjB,IAAIC,EAAU,EAAKL,MAAMC,KACX,SAAVG,EACHC,EAAQC,KAAK,EAAKC,aAElBF,EAAQC,KAAK,EAAKE,iBAEnB,EAAKC,SAAS,CAAER,KAAK,YAAKI,M,EAG3BE,YAAc,SAACG,EAAGC,GAEjB,IAAMC,EAAQF,EAAEG,KAAKC,KAAKC,cACpBC,EAAQL,EAAEE,KAAKC,KAAKC,cAEtBE,EAAa,EAMjB,OALIL,EAAQI,EACXC,EAAa,EACHL,EAAQI,IAClBC,GAAc,GAERA,G,EAGRT,gBAAkB,SAACE,EAAGC,GAErB,IAAMC,EAAQF,EAAEQ,SAASlB,MAAMe,cACzBC,EAAQL,EAAEO,SAASlB,MAAMe,cAE3BE,EAAa,EAMjB,OALIL,EAAQI,EACXC,EAAa,EACHL,EAAQI,IAClBC,GAAc,GAERA,G,kEA1Ca,IAAD,OACnBE,IACEC,MAAK,SAAAC,GAAG,OAAI,EAAKZ,SAAS,CAAER,KAAMoB,EAAIpB,KAAKI,aAC3CiB,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,Q,+BAyClB,IAAD,OAER,OACC,+BACC,kDACA,+BACC,4BACC,wBAAIG,QAAQ,OAIb,4BACC,6BACA,4BAAI,4BAAQC,KAAK,SAASC,QAAS,kBAAM,EAAKzB,eAAe,UAAzD,SACJ,qCACA,4BAAI,4BAAQwB,KAAK,SAASC,QAAS,kBAAM,EAAKzB,eAAe,cAAzD,aACJ,uCAGF,+BAEE0B,KAAK7B,MAAMC,KAAK6B,KAAI,SAAAC,GAAQ,OAC3B,wBAAIC,IAAKD,EAASE,OACjB,4BAAI,yBAAKC,IAAKH,EAASI,QAAQC,MAAOC,UAAU,YAAYC,IAAI,gDAChE,4BAAKP,EAASlB,KAAK0B,MAAnB,IAA2BR,EAASlB,KAAKC,MACzC,4BAAKiB,EAASE,OACd,4BAAKF,EAASb,SAASsB,KAAvB,KAA+BT,EAASb,SAASlB,OACjD,4BAAK+B,EAASU,iB,GA9EMC,aCcbC,EAbH,WAKX,OACC,oCACC,kBAAC,EAAD,QCJHC,IAASC,OACR,kBAAC,IAAMC,WAAP,KACC,yBAAKT,UAAU,aACd,yBAAKA,UAAU,aACd,6DACA,uDAED,kBAAC,EAAD,QAGFU,SAASC,eAAe,W","file":"static/js/main.72d78c40.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nconst BASEURL = \"https://randomuser.me/api/?results=1000&nat=us\";\r\n\r\nexport default {\r\n\temployees: function () {\r\n\t\treturn axios.get(BASEURL)\r\n\t}\r\n};\r\n\r\n\r\n","import React, { Component } from \"react\";\r\nimport API from \"../utils/API\";\r\n\r\nclass EmployeeTable extends Component {\r\n\r\n\tstate = {\r\n\t\tdata: [],\r\n\t\tsortOrder: \"descending\"\r\n\t};\r\n\r\n\tcomponentDidMount() {\r\n\t\tAPI.employees()\r\n\t\t\t.then(res => this.setState({ data: res.data.results }))\r\n\t\t\t.catch(err => console.log(err));\r\n\t};\r\n\r\n\r\n\tsetSortedField = (field) => {\r\n\t\tlet results = this.state.data;\r\n\t\tif (field === \"name\") {\r\n\t\t\tresults.sort(this.compareName)\r\n\t\t} else {\r\n\t\t\tresults.sort(this.compareLocation)\r\n\t\t}\r\n\t\tthis.setState({ data: [...results] })\r\n\t};\r\n\r\n\tcompareName = (a, b) => {\r\n\r\n\t\tconst bandA = a.name.last.toUpperCase();\r\n\t\tconst bandB = b.name.last.toUpperCase();\r\n\r\n\t\tlet comparison = 0;\r\n\t\tif (bandA > bandB) {\r\n\t\t\tcomparison = 1;\r\n\t\t} else if (bandA < bandB) {\r\n\t\t\tcomparison = -1;\r\n\t\t}\r\n\t\treturn comparison;\r\n\t}\r\n\r\n\tcompareLocation = (a, b) => {\r\n\r\n\t\tconst bandA = a.location.state.toUpperCase();\r\n\t\tconst bandB = b.location.state.toUpperCase();\r\n\r\n\t\tlet comparison = 0;\r\n\t\tif (bandA > bandB) {\r\n\t\t\tcomparison = 1;\r\n\t\t} else if (bandA < bandB) {\r\n\t\t\tcomparison = -1;\r\n\t\t}\r\n\t\treturn comparison;\r\n\t}\r\n\trender() {\r\n\r\n\t\treturn (\r\n\t\t\t<table>\r\n\t\t\t\t<caption>Our Employees</caption>\r\n\t\t\t\t<thead>\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t<th colSpan=\"5\">\r\n\r\n\t\t\t\t\t\t</th>\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t<th></th>\r\n\t\t\t\t\t\t<th><button type=\"button\" onClick={() => this.setSortedField(\"name\")}>Name</button></th>\r\n\t\t\t\t\t\t<th>Phone</th>\r\n\t\t\t\t\t\t<th><button type=\"button\" onClick={() => this.setSortedField(\"location\")}>Location</button></th>\r\n\t\t\t\t\t\t<th>Email</th>\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t</thead>\r\n\t\t\t\t<tbody>\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tthis.state.data.map(employee => (\r\n\t\t\t\t\t\t\t<tr key={employee.phone}>\r\n\t\t\t\t\t\t\t\t<td><img src={employee.picture.large} className=\"img-fluid\" alt=\"{employee.name.first} {employee.name.last}\" /></td>\r\n\t\t\t\t\t\t\t\t<td>{employee.name.first} {employee.name.last}</td>\r\n\t\t\t\t\t\t\t\t<td>{employee.phone}</td>\r\n\t\t\t\t\t\t\t\t<td>{employee.location.city}, {employee.location.state}</td>\r\n\t\t\t\t\t\t\t\t<td>{employee.email}</td>\r\n\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t))\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t</tbody>\r\n\t\t\t</table >\r\n\t\t)\r\n\t};\r\n};\r\n\r\nexport default EmployeeTable;","import React, { Component } from \"react\";\nimport EmployeeCard from \"./components/EmployeeTable\"\n\n\nconst App = () => {\n\n\n\t// Map over this.state.friends and render a FriendCard component for each friend object\n\n\treturn (\n\t\t<>\n\t\t\t<EmployeeCard />\n\t\t</>\n\t);\n\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport \"bootstrap/dist/css/bootstrap.min.css\"\nimport './App.css';\nimport App from './App';\n\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<div className=\"container\">\n\t\t\t<div className=\"jumbotron\">\n\t\t\t\t<h1>Rose Video Employee Directory</h1>\n\t\t\t\t<h3>Where it's always 1995</h3>\n\t\t\t</div>\n\t\t\t<App />\n\t\t</div>\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n\n"],"sourceRoot":""}